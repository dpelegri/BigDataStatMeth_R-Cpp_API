% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{bdblockmult_sparse_hdf5}
\alias{bdblockmult_sparse_hdf5}
\title{Block matrix multiplication}
\usage{
bdblockmult_sparse_hdf5(
  filename,
  group,
  A,
  B,
  groupB = NULL,
  block_size = NULL,
  mixblock_size = NULL,
  paral = NULL,
  threads = NULL,
  outgroup = NULL,
  outdataset = NULL,
  overwrite = NULL
)
}
\arguments{
\item{filename}{string file name where dataset to normalize is stored}

\item{group}{string path inside hdf5 data file where matrix A is stored}

\item{A, }{string with dataset name where matrix is stored}

\item{B, }{string with dataset name where matrix is stored}

\item{groupB}{string path inside hdf5 data file where matrix B is stored}

\item{block_size}{integer, block size used to perform calculus}

\item{mixblock_size}{integer}

\item{paral, }{boolean (optional, default = FALSE) set paral = true to force parallel execution}

\item{threads}{(optional) only if bparal = true, number of concurrent threads in parallelization if threads is null then threads =  maximum number of threads available}

\item{outgroup}{string with the group name under the matrix will be stored}

\item{outdataset}{string with the dataset name to store results}

\item{overwrite, }{boolean}
}
\value{
a dataset inside the hdf5 data file with A+B
}
\description{
This function performs a block matrix-matrix multiplication with numeric matrix
}
\examples{

library(Matrix)
library(BigDataStatMeth)

k <- 1e3
set.seed(1)
x_sparse <- sparseMatrix(
    i = sample(x = k, size = k),
    j = sample(x = k, size = k),
    x = rnorm(n = k)
)
set.seed(2)
y_sparse <- sparseMatrix(
    i = sample(x = k, size = k),
    j = sample(x = k, size = k),
    x = rnorm(n = k)
)

if( isTRUE(file.exists('BasicMatVect.hdf5'))) {
     file.remove('BasicMatVect.hdf5')
}
bdCreate_hdf5_matrix("BasicMatVect.hdf5", as.matrix(x_sparse), "SPARSE", "x_sparse")
bdCreate_hdf5_matrix("BasicMatVect.hdf5", as.matrix(y_sparse), "SPARSE", "y_sparse")

d <- bdblockmult_sparse_hdf5("BasicMatVect.hdf5", "SPARSE", "x_sparse", "y_sparse")

# Remove file (used as example)
if (file.exists("BasicMatVect.hdf5")) {
  # Delete file if it exist
  file.remove("BasicMatVect.hdf5")
}

}
