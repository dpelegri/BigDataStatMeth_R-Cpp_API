% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{bdtCrossprod_hdf5}
\alias{bdtCrossprod_hdf5}
\title{tCrossprod with hdf5 matrix}
\usage{
bdtCrossprod_hdf5(
  filename,
  group,
  A,
  B = NULL,
  groupB = NULL,
  block_size = NULL,
  mixblock_size = NULL,
  paral = NULL,
  threads = NULL,
  outgroup = NULL,
  outdataset = NULL,
  force = NULL
)
}
\arguments{
\item{filename}{string file name where dataset to normalize is stored}

\item{group, }{string, group name where dataset A is stored}

\item{A}{string name inside HDF5 file}

\item{B}{string, dataset name for matrix B inside HDF5 file}

\item{groupB, }{string, group name where dataset b is stored}

\item{block_size}{(optional, defalut = 128) block size to make matrix multiplication, if \code{block_size = 1} no block size is applied (size 1 = 1 element per block)}

\item{mixblock_size}{(optional) only for debug pourpose}

\item{paral, }{(optional, default = TRUE) if paral = TRUE performs parallel computation else performs seria computation}

\item{threads}{(optional) only if bparal = true, number of concurrent threads in parallelization if threads is null then threads =  maximum number of threads available}

\item{outgroup}{(optional) group name to store results from tCrossprod inside hdf5 data file}
}
\value{
no value
}
\description{
This function performs the tcrossprod from a matrix inside and hdf5 data file
}
\examples{
  
  library(BigDataStatMeth)
  library(rhdf5)
  
  N = 1000
  M = 1000
  
  set.seed(555)
  a <- matrix( rnorm( N*M, mean=0, sd=1), N, M) 
  
  bdCreate_hdf5_matrix( filename = "test_temp.hdf5", 
                        object = a, group = "INPUT", 
                        dataset = "datasetA",
                        transp = FALSE,
                        overwriteFile = TRUE, 
                        overwriteDataset = FALSE, 
                        unlimited = FALSE)
                        
    file <- "test_temp.hdf5"
    dataset <- "results/res"
    
    bdtCrossprod_hdf5( filename = "test_temp.hdf5", group = "INPUT", 
                       A = "datasetA", outgroup = "results", 
                       outdataset = "res", force = TRUE ) # 
                       
    # Check results
    resr <- tcrossprod(a)
    res <-  h5read(file,dataset)
    all.equal( resr, res)
    
    bdtCrossprod_hdf5(filename = "test_temp.hdf5", group = "INPUT", 
                       A = "datasetA", outgroup = "results", 
                       outdataset = "res", block_size = 1024, 
                       force = TRUE ) # 
    
    # Check results
    resr <- tcrossprod(a)
    res <-  h5read(file,dataset)
    all.equal( resr, res)
  
    # Remove file (used as example)
    if (file.exists("test_temp.hdf5")) {
      file.remove("test_temp.hdf5")
    }
  

}
